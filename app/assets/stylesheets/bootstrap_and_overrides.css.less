@import "twitter/bootstrap/bootstrap";
@import "twitter/bootstrap/responsive";

// Set the correct sprite paths
@iconSpritePath: image-url("twitter/bootstrap/glyphicons-halflings.png");
@iconWhiteSpritePath: image-url("twitter/bootstrap/glyphicons-halflings-white.png");

// Set the Font Awesome (Font Awesome is default. You can disable by commenting below lines)
@fontAwesomeEotPath: asset-url("fontawesome-webfont.eot");
@fontAwesomeEotPath_iefix: asset-url("fontawesome-webfont.eot?#iefix");
@fontAwesomeWoffPath: asset-url("fontawesome-webfont.woff");
@fontAwesomeTtfPath: asset-url("fontawesome-webfont.ttf");
@fontAwesomeSvgPath: asset-url("fontawesome-webfont.svg#fontawesomeregular");

// Font Awesome
@import "fontawesome/font-awesome";

// Glyphicons
@import "twitter/bootstrap/sprites.less";

// Your custom LESS stylesheets goes here
//
// Since bootstrap was imported above you have access to its mixins which
// you may use and inherit here
//
// If you'd like to override bootstrap's own variables, you can do so here as well
// See http://twitter.github.com/bootstrap/customize.html#variables for their names and documentation
//
// Example:
// @linkColor: #ff0000;
body {
  padding-top: 50px;
}

/*
   Force table width to 100%
 */
table.table-fixedheader {
  width: 100%;
}

/*
   Set table elements to block mode.  (Normally they are inline).
   This allows a responsive table, such as one where columns can be stacked
   if the display is narrow.
 */
table.table-fixedheader,
table.table-fixedheader>thead,
table.table-fixedheader>tbody,
table.table-fixedheader>thead>tr,
table.table-fixedheader>tbody>tr,
table.table-fixedheader>thead>tr>th,
table.table-fixedheader>tbody>td {
  display: block;
}


table.table-fixedheader>thead>tr:after,
  table.table-fixedheader>tbody>tr:after {
  content: ' ';
  display: block;
  visibility: hidden;
  clear: both;
}

/*
   When scrolling the table, actually it is only the tbody portion of the
   table that scrolls (not the entire table: we want the thead to remain
   fixed).  We must specify an explicit height for the tbody.  We include
   100px as a default, but it can be overridden elsewhere.

   Also, we force the scrollbar to always be displayed so that the usable
   width for the table contents doesn't change (such as becoming narrower
   when a scrollbar is visible and wider when it is not).
 */
table.table-fixedheader>tbody {
  overflow-y: scroll;
  height: 100px;
}

/*
   We really don't want to scroll the thead contents, but we want to force
   a scrollbar to be displayed anyway so that the usable width of the thead
   will exactly match the tbody.
 */
table.table-fixedheader>thead {        
  overflow-y: scroll;
}

/*
   For browsers that support it (webkit), we set the background color of
   the unneeded scrollbar in the thead to make it invisible.  (Setting
visiblity: hidden defeats the purpose, as this alters the usable width
of the thead.)
 */
table.table-fixedheader>thead::-webkit-scrollbar{
  background-color: inherit;
}

/*
   We want to set <th> and <td> elements to float left.
   We also must explicitly set the width for each column (both for the <th>
   and the <td>).  We set to 20% here a default placeholder, but it can be
   overridden elsewhere.
 */
table.table-fixedheader>thead>tr>th,
  table.table-fixedheader>tbody>tr>td {
  width: 20%;
  float: left;
}
